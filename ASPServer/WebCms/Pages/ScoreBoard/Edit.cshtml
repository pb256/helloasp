@page
@model WebCms.Pages.ScoreBoard.Edit

@{
    ViewData["Title"] = $"스코어 보드 {Model.UserScore.uid}";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<h1>스코어 보드 (@Model.UserScore.uid)</h1>
<hr/>

<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="UserScore.uid" />
            <div class="form-group">
                <label asp-for="UserScore.score" class="control-label"></label>
                <input asp-for="UserScore.score" class="form-control" />
                <span asp-validation-for="UserScore.score" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="UserScore.created" class="control-label"></label>
                <input asp-for="UserScore.created" class="form-control" />
                <span asp-validation-for="UserScore.created" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="저장" class="btn btn-primary" />
            </div>
        </form>
        <hr/>
        @* 이렇게 하는게 맞나? 🤔🤔 *@
        <form method="post" asp-page-handler="Remove">
            <input type="hidden" asp-for="UserScore.uid" />
            <div class="form-group">
                <input type="submit" value="삭제" class="btn-danger"/>
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-page="./Index">돌아가기</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}